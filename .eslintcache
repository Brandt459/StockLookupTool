[{"C:\\Users\\Brand\\Dev\\StockApp\\stockapp\\src\\index.js":"1","C:\\Users\\Brand\\Dev\\StockApp\\stockapp\\src\\Stock.js":"2"},{"size":239,"mtime":1611798514373,"results":"3","hashOfConfig":"4"},{"size":3466,"mtime":1611799812642,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"8"},"1jag754",{"filePath":"9","messages":"10","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"11"},"C:\\Users\\Brand\\Dev\\StockApp\\stockapp\\src\\index.js",[],["12","13"],"C:\\Users\\Brand\\Dev\\StockApp\\stockapp\\src\\Stock.js",["14"],"import React, { Component } from 'react'\r\nimport Plotly from 'plotly.js'\r\nimport createPlotlyComponent from 'react-plotly.js/factory'\r\nconst Plot = createPlotlyComponent(Plotly);\r\n\r\nexport default class Stock extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            symbol: [],\r\n            stockCharXValues: [],\r\n            stockCharYValues: [],\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    fetchStock(symbol, interval) {\r\n        const API_KEY = '29BHBFJTX8QHR49J'\r\n        let API_CALL = `https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=${symbol}&interval=${interval}&apikey=${API_KEY}`\r\n        let stockCharXValuesFunction = []\r\n        let stockCharyValuesFunction = []\r\n\r\n        fetch(API_CALL)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                for (let key in data[`Time Series (${interval})`]) {\r\n                    stockCharXValuesFunction.push(key)\r\n                    stockCharyValuesFunction.push(data[`Time Series (${interval})`][key]['1. open'])\r\n                }\r\n                this.setState({\r\n                    symbol: symbol,\r\n                    stockCharXValues: stockCharXValuesFunction,\r\n                    stockCharYValues: stockCharyValuesFunction,\r\n                })\r\n            })\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault()\r\n        const symbol = e.target.querySelector('#stock-form-ticker-symbol').value\r\n        const interval = e.target.querySelector('#stock-form-interval').value\r\n        this.fetchStock(symbol, interval)\r\n    }\r\n\r\n    render() {\r\n        const symbol = this.state.symbol\r\n        return (\r\n            <div className=\"stock-component\">\r\n                <h1 className=\"title\">Stock Lookup Tool</h1>\r\n                <form className=\"stock-form\" onSubmit={this.handleSubmit}>\r\n                    <input type=\"text\" id=\"stock-form-ticker-symbol\" placeholder=\"Input ticker symbol...\" />\r\n                    <select id=\"intervals\" id=\"stock-form-interval\">\r\n                        <option value=\"\" disabled selected>Select Interval...</option>\r\n                        <option value=\"1min\">1 minute</option>\r\n                        <option value=\"5min\">5 minutes</option>\r\n                        <option value=\"15min\">15 minutes</option>\r\n                        <option value=\"30min\">30 minutes</option>\r\n                        <option value=\"60min\">60 minutes</option>\r\n                    </select>\r\n                    <input type=\"submit\" id=\"stock-form-submit\" placeholder=\"Submit\" />\r\n                </form>\r\n                {\r\n                    symbol &&\r\n                    <Plot className=\"plot\"\r\n                        data={[\r\n                            {\r\n                                x: this.state.stockCharXValues,\r\n                                y: this.state.stockCharYValues,\r\n                                type: 'scatter',\r\n                                name: 'AMZN',\r\n                                showlegend: false,\r\n                                mode: 'lines+markers',\r\n                                marker: { color: 'red' },\r\n                            }\r\n                        ]}\r\n                        layout={{ title: this.state.symbol, xaxis: { title: 'Time' }, yaxis: { title: 'Price ($)' } }}\r\n                    />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n",{"ruleId":"15","replacedBy":"16"},{"ruleId":"17","replacedBy":"18"},{"ruleId":"19","severity":1,"message":"20","line":52,"column":44,"nodeType":"21","endLine":52,"endColumn":68},"no-native-reassign",["22"],"no-negated-in-lhs",["23"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]